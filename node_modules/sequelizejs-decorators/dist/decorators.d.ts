import { BelongsToManyOptions, BelongsToOptions, HasManyOptions, HasOneOptions, Model, ModelAttributeColumnOptions, ModelStatic, ModelOptions } from 'sequelize';
import { Sequelize } from 'sequelize';
export interface IIndexOptions {
    name?: string;
    unique?: boolean;
}
export declare function Entity(name?: string | ModelOptions<any>, options?: ModelOptions<any>): (target: Function) => void;
export declare function Column(attribute: ModelAttributeColumnOptions): (target: any, key: string) => void;
export declare function CreatedDateColumn(): (target: any, key: string) => void;
export declare function UpdatedDateColumn(): (target: any, key: string) => void;
export declare function PrimaryGeneratedColumn(): (target: any, key: string) => void;
export declare function HasOne(typeFunction: () => Function, options?: HasOneOptions): (target: any, key: string) => void;
export declare function HasMany(typeFunction: () => Function, options?: HasManyOptions): (target: any, key: string) => void;
export declare function BelongsTo(typeFunction: () => Function, options?: BelongsToOptions): (target: any, key: string) => void;
export declare function ManyToMany(typeFunction: () => Function, options: BelongsToManyOptions): (target: any, key: string) => void;
export declare function Index(options?: IIndexOptions): (target: any, key: string) => void;
export declare function registerEntities(sequelize: Sequelize, entities: Function[]): {
    [key: string]: ModelStatic<Model>;
};
